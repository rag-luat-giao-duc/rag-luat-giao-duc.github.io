{"version":3,"sources":["assets/alert.wav","api/base-call-api.tsx","api/login.tsx","api/getListMessage.tsx","components/alert/index.tsx","assets/close.svg","assets/close-dark.svg","components/avatar/index.tsx","components/button/index.tsx","components/message/index.tsx","components/text-field/index.tsx","components/hint/index.tsx","assets/send.svg","assets/send-dark.svg","components/messages/index.tsx","assets/sun.svg","assets/moon.svg","assets/menu.svg","assets/menu-dark.svg","views/chat/index.tsx","api/checkconnection.tsx","views/join/index.tsx","util/index.ts","app/index.tsx","api/checkApiValid.tsx","api/sendMessage.tsx","reportWebVitals.ts","index.tsx"],"names":["api","axios","create","baseURL","callApi","method","subquery","a","body","storedApiKey","Cookies","get","config","url","data","headers","request","response","username","password","UserNameOrEmail","Password","resetTimeout","Alert","dark","show","message","timeout","onChange","useEffect","clearTimeout","setTimeout","className","onClick","alt","src","closeDark","close","Avatar","name","altBg","title","trim","initial","first","second","toUpperCase","initials","Button","children","block","color","event","style","backgroundColor","Message","text","timestamp","user","isCurrentUser","toLowerCase","dangerouslySetInnerHTML","__html","result","stack","i","length","pop","push","formatText","width","TextField","type","value","placeholder","icon","onIconClick","onKeyPress","sending","suggestions","setUseModel","useModel","handler","func","setShowSuggestions","showSuggestions","useState","desc","key","target","disabled","map","suggestion","console","log","handleSuggestionClick","HintMessage","setMessage","onSend","item","index","Messages","messages","messagesRef","useRef","hint","setHint","useLayoutEffect","current","elem","scrollTop","scrollHeight","ref","sendDarkIcon","sendIcon","Chat","onTheme","showUsers","setShowUsers","connectionOpen","setConnection","retryCount","fetchData","async","check","status","Data","menuDark","menu","flexGrow","sun","moon","remove","window","location","reload","Join","onJoin","setName","setPassword","height","JSON","stringify","includes","lightCSSVariables","darkCSSVariables","overrideThemeVariables","themeObject","root","document","querySelector","themeVariables","Object","keys","forEach","themeVar","element","variable","varValue","startsWith","setProperty","String","alert","require","audio","Audio","default","socket","io","transports","App","apiKey","setApiKey","setMessages","setDark","joined","setJoined","showAlert","setShowAlert","alertMessage","setAlertMessage","setSending","Login","login","StatusCode","Date","getTime","set","expires","test","reset","error","isAxiosError","Check","UserName","formatDate","dateString","date","now","hours","getHours","toString","padStart","minutes","getMinutes","timeString","timeDifference","daysDifference","Math","floor","weeksDifference","dayOfWeek","toLocaleDateString","weekday","transformMessage","CreatedAt","Sender","GetMessages","getmessages","transformedMessages","on","devMessage","handleTheme","localStorage","getItem","cookie","setItem","preventDefault","myMessage","toTimeString","slice","model","Model","sendMessageFn","newMessage","play","emit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1d990ab3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/alert.439ffe7a.wav\";","import axios, { AxiosError, AxiosRequestConfig, AxiosResponse } from \"axios\";\r\nimport Cookies from 'js-cookie';\r\n\r\nconst api = axios.create({\r\n    baseURL: 'https://api-rag-luat-giao-duc.azurewebsites.net/',\r\n});\r\n\r\nexport const callApi = async (\r\n    method: string,\r\n    subquery: string,\r\n    body: object = {}\r\n): Promise<AxiosResponse> => {\r\n    try {\r\n        const storedApiKey = Cookies.get('apiKey');\r\n\r\n        const config: AxiosRequestConfig = {\r\n            method: method as any,\r\n            url: subquery,\r\n            data: body,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'api-key': storedApiKey || '',\r\n            }\r\n        };\r\n\r\n        const response = await api.request(config);\r\n        return response;\r\n    } catch (error) {\r\n        // eslint-disable-next-line no-throw-literal\r\n        throw error as AxiosError;\r\n    }\r\n};\r\n","import { callApi } from \"./base-call-api\";\r\n\r\n\r\nexport default async function login(username: string, password: string) {\r\n    const body = {\r\n        UserNameOrEmail : username,\r\n        Password : password,\r\n    };\r\n\r\n    return await callApi('POST', '/api/user/login', body);\r\n};","import { callApi } from \"./base-call-api\";\r\n\r\nexport default async function checkApiValid() {\r\n\r\n    return await callApi('GET', '/api/chat/get-list-chat-history');\r\n\r\n};","import { useEffect } from 'react'\r\n\r\nimport './styles.css'\r\nimport close from '../../assets/close.svg'\r\nimport closeDark from '../../assets/close-dark.svg'\r\n\r\nlet resetTimeout: any\r\nconst Alert = ({ dark, show, message, timeout = 2500, onChange }: any) => {\r\n  useEffect(() => {\r\n    if (show) {\r\n      clearTimeout(resetTimeout)\r\n      resetTimeout = setTimeout(() => {\r\n        onChange && onChange(false)\r\n      }, timeout)\r\n    }\r\n  }, [show, timeout, onChange])\r\n\r\n  return (\r\n    <div className={`alert alert--${show ? 'active' : 'inactive'}`}>\r\n      <div className=\"alert__message\">{message}</div>\r\n      <div className=\"alert__icon\" onClick={() => onChange && onChange(false)}>\r\n        <img\r\n          alt=\"close\"\r\n          className=\"close__icon\"\r\n          src={dark ? closeDark : close}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","export default __webpack_public_path__ + \"static/media/close.4a115b27.svg\";","export default __webpack_public_path__ + \"static/media/close-dark.37ff4c0f.svg\";","import './styles.css'\r\n\r\nconst Avatar = ({ name, altBg = false }: any) => {\r\n  const initials = () => {\r\n    let initial = ''\r\n\r\n    if (name) {\r\n      const first = name[0]\r\n      const second = name[1]\r\n\r\n      if (first) {\r\n        initial += first\r\n      }\r\n\r\n      if (second) {\r\n        initial += second\r\n      }\r\n    }\r\n\r\n    return initial.toUpperCase()\r\n  }\r\n\r\n  return (\r\n    <div title={name} className={`avatar ${altBg ? 'avatar--bg' : ''}`.trim()}>\r\n      {initials()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Avatar\r\n","import './styles.css'\r\n\r\ninterface ButtonProps {\r\n  children: React.ReactNode;\r\n  block?: boolean;\r\n  onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;\r\n  color?: string; \r\n}\r\n\r\nconst Button = ({ children, block = false, onClick, color }: ButtonProps) => {\r\n  return (\r\n    <button\r\n      onClick={(event) => onClick && onClick(event)}\r\n      className={`message__text__hint button ${block ? 'button--block' : ''}`.trim()}\r\n      style={{ backgroundColor: color }} \r\n    >\r\n      {children}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Button\r\n","import Avatar from '../avatar'\r\n\r\nimport './styles.css'\r\n\r\nconst Message = ({ name, text, timestamp, user }: any) => {\r\n  const isCurrentUser = () => user.toLowerCase() === name.toLowerCase()\r\n\r\n  const isBot = () => user.toLowerCase() === 'bot' || user.toLowerCase() === 'system'\r\n\r\n  const time = () => {\r\n    // const date = new Date(timestamp)\r\n\r\n    // const normalizeDigit = (digit: number) => `${digit < 10 ? '0' : ''}${digit}`\r\n\r\n    return timestamp\r\n  }\r\n\r\n  //formatting text base on text format\r\n  const formatText = (text:string) => {\r\n    let result = '';\r\n    let stack = [];\r\n    let i = 0;\r\n\r\n    while (i < text.length) {\r\n      if (text[i] === '*' && text[i + 1] === '*') {\r\n        if (stack.length > 0 && stack[stack.length - 1] === '**') {\r\n          result += '</b>';\r\n          stack.pop();\r\n          i += 2;\r\n        } else {\r\n          result += '<b>';\r\n          stack.push('**');\r\n          i += 2;\r\n        }\r\n      } else if (text[i] === '*') {\r\n        if (stack.length > 0 && stack[stack.length - 1] === '*') {\r\n          result += '</i>';\r\n          stack.pop();\r\n          i += 1;\r\n        } else {\r\n          result += '<i>';\r\n          stack.push('*');\r\n          i += 1;\r\n        }\r\n      } else {\r\n        result += text[i];\r\n        i += 1;\r\n    }\r\n  }\r\n  while (stack.length > 0) {\r\n    const tag = stack.pop();\r\n    result += tag === '**' ? '</b>' : '</i>';\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\n  return (\r\n    <div\r\n      className={`message__wrapper ${\r\n        isCurrentUser() ? 'message__wrapper--right' : 'message__wrapper--left'\r\n      }`.trim()}\r\n    >\r\n      {isBot() ? (\r\n        <div className=\"message__bot\"  dangerouslySetInnerHTML={{ __html: formatText(text) }}/>\r\n      ) : (\r\n        <>\r\n          {!isCurrentUser() && (\r\n            <>\r\n              <Avatar name={user} />\r\n              <div style={{ width: '8px' }}></div>\r\n            </>\r\n          )}\r\n          <div\r\n            className={`message__container ${\r\n              isCurrentUser() ? 'message__container--right' : ''\r\n            }`.trim()}\r\n          >\r\n            <div className=\"message__text\">{text}</div>\r\n            <div\r\n              className={`message__timestamp ${\r\n                isCurrentUser() ? 'message__timestamp--right' : ''\r\n              }`.trim()}\r\n            >\r\n              {time()}\r\n            </div>\r\n          </div>\r\n          {isCurrentUser() && (\r\n            <>\r\n              <div style={{ width: '8px' }}></div>\r\n              <Avatar name={user} />\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Message\r\n","import './styles.css'\r\n\r\nimport { useState } from 'react';\r\n\r\n\r\nconst TextField = ({\r\n  className = '',\r\n  type,\r\n  value,\r\n  placeholder,\r\n  icon = false,\r\n  onIconClick,\r\n  onKeyPress,\r\n  onChange,\r\n  sending,\r\n  suggestions,\r\n  setUseModel,\r\n  useModel\r\n}: any) => {\r\n  const handler = (func: Function, value: any) => {\r\n    if (value === ('#')) {\r\n      setShowSuggestions(true);\r\n      return;\r\n    } else {\r\n      setShowSuggestions(false);\r\n    }\r\n    if (func) {\r\n      func(value)\r\n    }\r\n  }\r\n\r\n  const onClickClearModel = () => () => {\r\n    setUseModel('');\r\n    setShowSuggestions(true);\r\n  }\r\n\r\n  const [showSuggestions, setShowSuggestions] = useState(false);\r\n\r\n  const handleSuggestionClick = (suggestion:string) => {\r\n    setUseModel(suggestion);\r\n    console.log(suggestion);\r\n    setShowSuggestions(false);\r\n  };\r\n\r\n  return (\r\n    <div className={`input__wrapper ${className}`.trim()}>\r\n      {useModel && useModel.name && \r\n        <div className=\"input__use__model\"  title={useModel.desc}>\r\n          <div className=\"input__use__model__close\" onClick={onClickClearModel()}>X</div>\r\n          {useModel.name}\r\n        </div>\r\n      }\r\n\r\n      <input\r\n        type={type}\r\n        value={value}\r\n        placeholder={placeholder}\r\n        onKeyPress={(event) => handler(onKeyPress, event.key)}\r\n        onChange={({ target: { value } }) => handler(onChange, value)}\r\n        className={`input ${icon ? 'input--shrunk' : ''}`.trim()}\r\n        onClick={() => setShowSuggestions(false)}\r\n        disabled={sending}\r\n      />\r\n      \r\n      {showSuggestions && (\r\n        <ul className=\"suggestions\">\r\n          {suggestions.length > 0 && suggestions.map((suggestion: any) => (\r\n            \r\n            <li key={suggestion.name} \r\n              onClick={() => {\r\n                console.log(suggestion); \r\n                suggestion && handleSuggestionClick(suggestion);\r\n              }}\r\n              title={suggestion.desc}\r\n            >\r\n              {suggestion.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      {icon && (\r\n        <div\r\n          className=\"input__send\"\r\n          onClick={(event) => handler(onIconClick, event)}\r\n        >\r\n          <img className=\"send_icon\" src={icon} alt=\"send\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TextField","import Avatar from '../avatar'\r\nimport { Button } from '../../components'\r\n\r\nimport './styles.css'\r\n\r\nconst HintMessage = ({ setMessage, onSend,  text }: any) => {\r\n\r\n  const hintData = [\r\n    {\r\n      text: 'Luật giáo dục do ai ban hành',\r\n      color: '#6B5B95'\r\n    },\r\n    {\r\n      text: 'Bạn có thể làm được gì',\r\n      color: '#92A8D1'\r\n    },\r\n    {\r\n      text: 'Học bổng được quy định thế nào',\r\n      color: '#B565A7'\r\n    },\r\n    {\r\n      text: 'Giảng viên là ai',\r\n      color: '#5B5EA6'\r\n    },\r\n    {\r\n      text: 'Có bao nhiêu điều trong luật giáo dục',\r\n      color: '#98B4D4'\r\n    }\r\n\r\n  ]\r\n\r\n  return (\r\n    <div\r\n      className={`message__wrapper 'message__wrapper--left'\r\n      }`.trim()}\r\n    >\r\n        <>\r\n         <>\r\n            <div style={{ width: '8px' }}></div>\r\n            <Avatar name={\"Admin\"} />\r\n          </>\r\n          <div\r\n            className={`message__container`.trim()}\r\n          >\r\n            <div className=\"message__text\">{text} \r\n              <br />\r\n              <br />\r\n\r\n              {\r\n                hintData.map((item, index) => (\r\n                  <Button\r\n                    key={index}\r\n                    onClick={() => {\r\n                      setMessage(item.text)\r\n                      onSend()\r\n                    }}\r\n                    color={item.color}\r\n                  >\r\n                    {item.text}\r\n                  </Button>\r\n                ))\r\n              \r\n              }\r\n            </div>\r\n            <div\r\n              className={`message__timestamp`.trim()}\r\n            >\r\n            </div>\r\n          </div>\r\n        </>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HintMessage\r\n","export default __webpack_public_path__ + \"static/media/send.623ea14f.svg\";","export default __webpack_public_path__ + \"static/media/send-dark.2eaae009.svg\";","  import { useLayoutEffect, useEffect, useState, useRef } from 'react'\r\n\r\n  import TextField from '../text-field'\r\n  import Message from '../message'\r\n  import HintMessage from '../hint'\r\n\r\n  import './styles.css'\r\n\r\n  import sendIcon from '../../assets/send.svg'\r\n  import sendDarkIcon from '../../assets/send-dark.svg'\r\n\r\n\r\n  const Messages = ({\r\n    suggestions,\r\n    sending,\r\n    dark,\r\n    onSend,\r\n    message,\r\n    messages,\r\n    setMessage,\r\n    name,\r\n    setUseModel,\r\n    useModel\r\n  }: any) => {\r\n    const messagesRef: any = useRef(null)\r\n    const [hint, setHint] = useState(false)\r\n\r\n    useLayoutEffect(() => {\r\n      if (messagesRef.current) {\r\n        const elem: any = messagesRef.current\r\n        elem.scrollTop = elem.scrollHeight\r\n      }\r\n    }, [messages, hint])\r\n\r\n\r\n    useEffect(() => {\r\n      if(messages.length === 1 && messages[0].user === 'ADMIN'){\r\n        setTimeout(() => {\r\n          setHint(true)\r\n        }, 15000)\r\n      }\r\n      else {\r\n        setHint(false)\r\n      }\r\n      //eslint-disable-next-line\r\n    }, [messages])\r\n\r\n    return (\r\n      <div className=\"messages__wrapper\">\r\n        <div ref={messagesRef} className=\"messages__container\">\r\n          {messages.map(({ text, timestamp, user }: any, index: number) => (\r\n            <Message\r\n              key={index}\r\n              user={user}\r\n              text={text}\r\n              name={name}\r\n              timestamp={timestamp}\r\n            />\r\n          ))}\r\n          {hint ? (\r\n            <HintMessage\r\n              text={\"Hãy bắt đầu bằng vài câu hỏi phổ biến nè!\"}\r\n              setMessage={setMessage}\r\n              onSend={onSend}\r\n            />\r\n          ) : null}\r\n          {/* {JSON.stringify(messages.reverse())} */}\r\n        </div>\r\n        <TextField\r\n          value={message}\r\n          onIconClick={() => onSend()}\r\n          placeholder={sending ? 'Solving...' : 'Type message here'}\r\n          icon={dark ? sendDarkIcon : sendIcon}\r\n          onChange={(value: string) => setMessage(value)}\r\n          onKeyPress={(key: string) => (key === 'Enter' ? onSend() : null)}\r\n          sending={sending}\r\n          suggestions={suggestions}\r\n          setUseModel={setUseModel}\r\n          useModel={useModel}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default Messages\r\n","export default __webpack_public_path__ + \"static/media/sun.f47b12ec.svg\";","export default __webpack_public_path__ + \"static/media/moon.f63d4641.svg\";","export default __webpack_public_path__ + \"static/media/menu.6d253151.svg\";","export default __webpack_public_path__ + \"static/media/menu-dark.9aab1937.svg\";","import { useState, useEffect } from 'react'\r\n\r\nimport { Button, Messages } from '../../components'\r\n\r\nimport './styles.css'\r\nimport sun from '../../assets/sun.svg'\r\nimport moon from '../../assets/moon.svg'\r\nimport menu from '../../assets/menu.svg'\r\nimport menuDark from '../../assets/menu-dark.svg'\r\n\r\nimport Cookies from 'js-cookie';  \r\nimport check from '../../api/checkconnection';\r\n\r\nconst Chat = ({\r\n  dark,\r\n  username,\r\n  sending,\r\n  message,\r\n  messages,\r\n  setMessage,\r\n  onTheme,\r\n  onSend,\r\n  suggestions,\r\n  setUseModel,\r\n  useModel\r\n}: any) => {\r\n  const [showUsers, setShowUsers] = useState<boolean>(false)\r\n  const [connectionOpen, setConnection] = useState<boolean>(false)\r\n\r\n  const Signout = () => {\r\n    Cookies.remove('apiKey');\r\n    window.location.reload();\r\n  }\r\n\r\n  useEffect(() => {\r\n    let retryCount = 0;\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        let response = await check();\r\n\r\n        if(response && response.status === 200 && response.data)\r\n        {\r\n          if(response.data.Data)\r\n          {\r\n            setConnection(true);\r\n          }\r\n          else \r\n          {\r\n            setTimeout(() => {\r\n              fetchData();\r\n            }, 15000);\r\n            \r\n            retryCount++;\r\n          }\r\n        }\r\n      } catch {\r\n        setConnection(false);\r\n\r\n        if (retryCount < 3) {\r\n          setTimeout(() => {\r\n            fetchData();\r\n          }, 15000);\r\n          retryCount++;\r\n        }\r\n        else {\r\n          console.log(\"Connection failed, wait a moment and try again.\");\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"chat__wrapper\">\r\n      <div className=\"chat__container\">\r\n        <div className=\"chat__header\">\r\n          <div className=\"chat__menu\" onClick={() => setShowUsers(!showUsers)}>\r\n            <img src={dark ? menuDark : menu} alt=\"menu\" />\r\n          </div>\r\n          <div className={`${connectionOpen ? 'chat__connection-open' : 'chat__connection-close'}`} title={connectionOpen ? 'Ready to use' : 'Wait for connection start'}>\r\n          </div>\r\n          <div title={username} className=\"chat__name\">\r\n            Chatapp\r\n          </div>\r\n          <div style={{ flexGrow: 1 }}></div>\r\n          <div className=\"chat__actions\">\r\n            <div\r\n              className=\"chat__theme\"\r\n              onClick={() => onTheme && onTheme(!dark)}\r\n            >\r\n              <img src={dark ? sun : moon} alt=\"theme\" />\r\n            </div>\r\n            <Button onClick={Signout}>LEAVE</Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"chat__body\">\r\n          <div className=\"chat__messages\">\r\n            <Messages\r\n              dark={dark}\r\n              name={username}\r\n              onSend={onSend}\r\n              message={message}\r\n              messages={messages}\r\n              setMessage={setMessage}\r\n              sending={sending}\r\n              suggestions={suggestions}\r\n              setUseModel={setUseModel}\r\n              useModel={useModel}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chat\r\n","import { callApi } from \"./base-call-api\";\r\n\r\n\r\nexport default async function check() {\r\n\r\n    return await callApi('GET', '/api/user/check-connection-ready');\r\n};","import { useState } from 'react'\r\n\r\nimport { Button, TextField } from '../../components'\r\n\r\nimport './styles.css'\r\n\r\nconst Join = ({ onJoin }: any) => {\r\n  const [username, setName] = useState<string>('')\r\n  const [password, setPassword] = useState<string>('')\r\n\r\n  const handleKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (event && JSON.stringify(event).includes('Enter')) {\r\n      onJoin && onJoin({ username, password });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"join__wrapper\">\r\n      <div className=\"join__container\">\r\n        <TextField\r\n          type=\"text\"\r\n          placeholder=\"Username\"\r\n          onChange={(value: string) => setName(value)}\r\n        />\r\n        <div style={{ height: '24px' }}></div>\r\n        <TextField\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          onChange={(value: string) => setPassword(value)}\r\n          onKeyPress={handleKeyPress}\r\n        />\r\n        <div style={{ height: '36px' }}></div>\r\n        <Button block onClick={() => onJoin && onJoin({ username, password })}>\r\n          GO!\r\n        </Button>\r\n        <div className=\"join__info\">i</div>\r\n        <div className=\"join__description\">\r\n          Join a private own beta chat bot!\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Join\r\n","export const lightCSSVariables = {\r\n  '--text-color-primary': 'rgba(0, 0, 0, 0.86)',\r\n  '--text-color-secondary': 'rgba(0, 0, 0, 0.7)',\r\n  '--text-color-disabled': 'rgba(0, 0, 0, 0.56)',\r\n  '--primary-bg': '#f3f6ff',\r\n  '--primary': '#2255be',\r\n  '--white': '#ffffff',\r\n  '--black': '#222222',\r\n}\r\n\r\nexport const darkCSSVariables = {\r\n  '--text-color-primary': 'rgba(255, 255, 255, 1)',\r\n  '--text-color-secondary': 'rgba(255, 255, 255, 0.8)',\r\n  '--text-color-disabled': 'rgba(255, 255, 255, 0.56)',\r\n  '--primary-bg': '#292929',\r\n  '--primary': '#2255be',\r\n  '--white': '#3d3d3d',\r\n  '--black': '#000000',\r\n}\r\n\r\nexport const setCSSVariable = (element: any, variable: any, value: any) => {\r\n  if (element && value) {\r\n    element.style.setProperty(variable, String(value))\r\n  }\r\n}\r\n\r\nexport const overrideThemeVariables = (themeObject: any) => {\r\n  const root = document.querySelector(':root')\r\n  const themeVariables = Object.keys(themeObject)\r\n\r\n  if (root && themeObject) {\r\n    themeVariables.forEach((themeVar) => {\r\n      const varValue = themeObject[themeVar]\r\n      if (varValue && themeVar.startsWith('--')) {\r\n        setCSSVariable(root, themeVar, varValue)\r\n      }\r\n    })\r\n  }\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport login from '../api/login';\r\nimport check from '../api/checkApiValid';\r\nimport getmessages from '../api/getListMessage';\r\nimport sendMessageFn from '../api/sendMessage';\r\nimport { Join, Chat } from '../views';\r\nimport { Alert } from '../components';\r\nimport {\r\n  darkCSSVariables,\r\n  lightCSSVariables,\r\n  overrideThemeVariables,\r\n} from '../util';\r\nimport Cookies from 'js-cookie';\r\n\r\nimport './styles.css';\r\nimport axios from 'axios';\r\n\r\nconst alert = require('../assets/alert.wav');\r\nconst audio = new Audio(alert.default);\r\n\r\nconst URL = '/';\r\nlet socket = io(URL, { transports: ['websocket'] });\r\n\r\nconst App = () => {\r\n  const [username, setName] = useState<string>('');\r\n  const [password, setPassword] = useState<string>('');\r\n  const [apiKey, setApiKey] = useState<string>('');\r\n  const [message, setMessage] = useState<string>('');\r\n  const [messages, setMessages] = useState<any[]>([]);\r\n  const [dark, setDark] = useState<boolean>(false);\r\n  const [joined, setJoined] = useState<boolean>(false);\r\n  const [showAlert, setShowAlert] = useState<boolean>(false);\r\n  const [alertMessage, setAlertMessage] = useState<string>('');\r\n  const [sending, setSending] = useState<boolean>(false);\r\n  const [useModel, setUseModel] = useState<any>([]);\r\n\r\n  const suggestions = [\r\n    {\r\n      \"name\":\"llama\", \r\n      \"desc\":\"là model gốc từ nhà phát triển Ollama model này chứa 7B tham số bao gồm tiếng Việt\"\r\n    },\r\n    {\r\n      \"name\":\"custom llama\", \r\n      \"desc\":\"dựa trên model llama nhưng được fine-tune trên dữ liệu tiếng Việt với 120k câu liên quan đến luật nói chung\"\r\n    },\r\n    {\r\n      \"name\":\"open text generater\", \r\n      \"desc\":\"sử dụng model Gemini của Google nhưng được tuned lại để phù hợp với ngữ cảnh câu hỏi\"\r\n    }\r\n  ];\r\n\r\n  const Login = async (username: string, password: string) => {\r\n    try {\r\n      const response = await login(username, password);\r\n      if (response.data.StatusCode === 200) {\r\n        if(\r\n          !response.data.Data[\"APIKey\"] ||\r\n          !response.data.Data[\"ExpiredTime\"]\r\n        ) {\r\n          setAlertMessage('Login failed. Please check your credentials and try again.');\r\n          setShowAlert(true);\r\n          return;\r\n        }\r\n        else if (response.data.Data[\"ExpiredTime\"] < new Date().getTime()) {\r\n          setAlertMessage('Login failed. Your API key has expired.');\r\n          setShowAlert(true);\r\n          return;\r\n        } else {\r\n          Cookies.set('apiKey', response.data.Data[\"APIKey\"], { expires: 1 });\r\n          setJoined(true);\r\n          setAlertMessage('Login successful.');\r\n          setShowAlert(true);\r\n          return\r\n        }\r\n        \r\n      } else if ((/\\u0027.*?\\u0027/).test(response.data.Message.toLowerCase())) {\r\n        setAlertMessage(\"Database be loading... Try again later!\");\r\n        setShowAlert(true);\r\n        reset();\r\n        return;\r\n      } else {\r\n        setAlertMessage(\r\n          \"Login failed. Please check your credentials and try again.\"\r\n        );\r\n        setShowAlert(true);\r\n        return;\r\n      }\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error)) {\r\n        console.error('Login failed:', error.response?.data);\r\n        setAlertMessage('Login failed. Please check your credentials and try again.');\r\n      } else {\r\n        console.error('An unexpected error occurred:', error);\r\n        setAlertMessage('An unexpected error occurred. Please try again.');\r\n      }\r\n      setShowAlert(true);\r\n      reset();\r\n      return;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const Check = async () => {\r\n      try {\r\n        const response = await check();\r\n\r\n        if (response && response.status === 200) {\r\n          if(response.data.StatusCode === 200) {\r\n            setJoined(true);\r\n            setName(response.data.Data.UserName || '');\r\n          }\r\n          else if(response.data.StatusCode === -99) {\r\n            setAlertMessage('API key not found');\r\n            setShowAlert(true);\r\n          }\r\n          \r\n        }\r\n        else {\r\n          setAlertMessage('API key is invalid. Please login again.');\r\n          setShowAlert(true);\r\n          reset();\r\n        }\r\n      } catch{\r\n        reset();\r\n      }\r\n    };\r\n\r\n    const formatDate = (dateString: any) => {\r\n        const date = new Date(dateString);\r\n\r\n        const now = new Date();\r\n    \r\n    \r\n        // Extract time\r\n        const hours = date.getHours().toString().padStart(2, '0');\r\n        const minutes = date.getMinutes().toString().padStart(2, '0');\r\n        const timeString = `${hours}:${minutes}`;\r\n    \r\n        // Calculate the difference in days\r\n        const timeDifference = now.getTime() - date.getTime();\r\n        const daysDifference = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\r\n        \r\n        if (daysDifference === 0) {\r\n            return timeString;\r\n        } else if (daysDifference === 1) {\r\n            return `Yesterday, ${timeString}`;\r\n        } else if (daysDifference >= 2 && daysDifference <= 7) {\r\n            return `${daysDifference} days ago, ${timeString}`;\r\n        } else {\r\n            const weeksDifference = Math.floor(daysDifference / 7);\r\n            const dayOfWeek = date.toLocaleDateString('vi-VN', { weekday: 'long' });\r\n            return `${dayOfWeek}, ${weeksDifference} weeks ago, ${timeString}`;\r\n        }\r\n    };\r\n\r\n    const transformMessage = (message: any) => ({\r\n      text: message.Message,\r\n      timestamp: formatDate(message.CreatedAt),\r\n      user: message.Sender.toLowerCase() === \"system\" ? \"system\" : message.Sender\r\n    });\r\n\r\n    const GetMessages = async () => {\r\n      try {\r\n        const response = await getmessages();\r\n    \r\n        if (response.status === 200 && response.data.Data !== null) {\r\n          const transformedMessages = response.data.Data.map(transformMessage);\r\n          setMessages(transformedMessages);\r\n        } \r\n        else if(\r\n                  response.status === 200 && response.data.StatusCode === -99 && \r\n                  response.data.Message === \"Not exist data\"\r\n        ) {\r\n\r\n          setTimeout(() => {\r\n            setMessages([{ \r\n              text: 'Send a first message 👇👇👇', \r\n              timestamp:'Welcome to chat app', \r\n              user: 'ADMIN'\r\n            }]);\r\n\r\n          }, 2000);\r\n\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching messages:\", error);\r\n      }\r\n    };\r\n\r\n    if(joined===false){\r\n      Check();\r\n    } else {\r\n      GetMessages();\r\n    }\r\n\r\n    socket.on('leave', ({ error, devMessage }) => {\r\n      console.error({ error, devMessage });\r\n      reset();\r\n    });\r\n\r\n    handleTheme(localStorage.getItem('dark') === 'true');\r\n\r\n  }, [joined]);\r\n\r\n  const reset = () => {\r\n    const cookies = Object.keys(Cookies.get());\r\n    cookies.forEach(cookie => {\r\n      Cookies.remove(cookie);\r\n    });\r\n    setAlertMessage('');\r\n    setShowAlert(false);\r\n    setJoined(false);\r\n    setMessages([]);\r\n    setMessage('');\r\n    setApiKey('');\r\n    setName('');\r\n    setPassword('');\r\n  };\r\n\r\n  const handleTheme = (value: boolean) => {\r\n    localStorage.setItem('dark', String(value));\r\n    setDark(value);\r\n    overrideThemeVariables(value ? darkCSSVariables : lightCSSVariables);\r\n  };\r\n\r\n  const sendMessage = async (event: any) => {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n    if (message) {\r\n      try {\r\n        let myMessage = {\r\n          text: message,\r\n          timestamp: new Date().toTimeString().slice(0, 5),\r\n          user: username\r\n        }\r\n\r\n        if(messages.length === 1 && messages[0].user === 'ADMIN') {\r\n          setMessages([myMessage]);\r\n        }\r\n        else {\r\n          setMessages((messages) => [...messages, myMessage]);\r\n        }\r\n\r\n        setMessage('');\r\n\r\n        setSending(true);\r\n\r\n        const response = await sendMessageFn(myMessage.text, useModel.name);\r\n\r\n        setSending(false);\r\n\r\n        if (response.status === 200) {\r\n\r\n          let newMessage = response.data.Data;\r\n\r\n          audio.play();\r\n\r\n          if(newMessage) {\r\n            newMessage = {\r\n              text: newMessage.Message,\r\n              timestamp: new Date(newMessage.CreatedAt).getTime(),\r\n              user: newMessage.Sender\r\n            }\r\n            \r\n            setMessages((messages) => [...messages, newMessage]);\r\n          }\r\n        } else {\r\n          setAlertMessage('Error sending message. Please try again.');\r\n          setShowAlert(true);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error sending message:', error);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  const onJoin = ({ username, password }: any) => {\r\n    setName(username);\r\n    setPassword(password);\r\n    Login(username, password);\r\n    socket.emit('join', { username, password }, (error: any) => {\r\n      if (error) {\r\n        setAlertMessage(error);\r\n        setShowAlert(true);\r\n        return;\r\n      }\r\n      setJoined(true);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Alert\r\n        dark={dark}\r\n        show={showAlert}\r\n        message={alertMessage}\r\n        onChange={(value: boolean) => setShowAlert(value)}\r\n      />\r\n      {joined ? (\r\n        <Chat\r\n          dark={dark}\r\n          username={username}\r\n          password={password}\r\n          apiKey={apiKey}\r\n          message={message}\r\n          messages={messages}\r\n          onSend={sendMessage}\r\n          onTheme={handleTheme}\r\n          setMessage={setMessage}\r\n          sending={sending}\r\n          suggestions={suggestions}\r\n          useModel={useModel}\r\n          setUseModel={setUseModel}\r\n        />\r\n      ) : (\r\n        <Join onJoin={onJoin} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { callApi } from \"./base-call-api\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nexport default async function checkApiValid() {\r\n\r\n    const apiKey = Cookies.get('apiKey');\r\n\r\n    return apiKey ? await callApi('GET', '/api/user/check-api-key?id=' + apiKey) : null;\r\n\r\n};","import { callApi } from \"./base-call-api\";\r\n\r\nexport default async function sendMessage(message: string, model: string) {\r\n\r\n    return await callApi('POST', '/api/chat/send-message',  { Message: message , Model: model });\r\n\r\n};","import { ReportHandler } from 'web-vitals'\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry)\r\n      getFID(onPerfEntry)\r\n      getFCP(onPerfEntry)\r\n      getLCP(onPerfEntry)\r\n      getTTFB(onPerfEntry)\r\n    })\r\n  }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './app'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}